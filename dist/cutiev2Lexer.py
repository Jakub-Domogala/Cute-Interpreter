# Generated from cutiev2.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,24,404,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,1,0,1,0,1,1,1,1,
        1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,8,1,8,
        1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,
        1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,3,11,134,8,11,1,12,1,12,
        1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,
        1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,3,14,160,8,14,1,15,
        1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,20,1,20,
        1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,24,
        1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,3,24,197,8,24,1,25,1,25,
        1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,28,1,28,
        1,28,3,28,215,8,28,1,29,1,29,1,29,1,29,3,29,221,8,29,1,30,1,30,1,
        30,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,
        32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,
        33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,35,1,
        35,1,35,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,36,1,
        36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,
        36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,
        36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,3,36,311,8,36,1,37,4,37,314,
        8,37,11,37,12,37,315,1,37,1,37,1,38,3,38,321,8,38,1,38,1,38,4,38,
        325,8,38,11,38,12,38,326,1,38,3,38,330,8,38,1,38,3,38,333,8,38,1,
        39,3,39,336,8,39,1,39,1,39,4,39,340,8,39,11,39,12,39,341,1,39,1,
        39,5,39,346,8,39,10,39,12,39,349,9,39,1,39,3,39,352,8,39,1,39,1,
        39,1,39,5,39,357,8,39,10,39,12,39,360,9,39,3,39,362,8,39,1,40,1,
        40,3,40,366,8,40,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,
        41,1,41,1,41,1,41,1,41,1,41,3,41,383,8,41,1,42,1,42,5,42,387,8,42,
        10,42,12,42,390,9,42,1,43,1,43,1,43,1,43,1,43,1,43,5,43,398,8,43,
        10,43,12,43,401,9,43,1,43,1,43,0,0,44,1,1,3,2,5,3,7,4,9,5,11,6,13,
        7,15,8,17,9,19,0,21,0,23,0,25,0,27,0,29,0,31,0,33,0,35,0,37,0,39,
        0,41,0,43,0,45,0,47,0,49,0,51,0,53,0,55,0,57,0,59,10,61,11,63,12,
        65,13,67,14,69,15,71,16,73,17,75,18,77,19,79,20,81,21,83,22,85,23,
        87,24,1,0,6,3,0,9,10,13,13,32,32,1,0,49,57,1,0,48,57,2,0,65,90,97,
        122,4,0,48,57,65,90,95,95,97,122,2,0,10,10,13,13,417,0,1,1,0,0,0,
        0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,
        1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,
        1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,
        1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,
        1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,1,89,1,0,0,0,3,91,1,0,0,0,5,93,
        1,0,0,0,7,95,1,0,0,0,9,97,1,0,0,0,11,99,1,0,0,0,13,101,1,0,0,0,15,
        103,1,0,0,0,17,105,1,0,0,0,19,110,1,0,0,0,21,124,1,0,0,0,23,133,
        1,0,0,0,25,135,1,0,0,0,27,146,1,0,0,0,29,159,1,0,0,0,31,161,1,0,
        0,0,33,163,1,0,0,0,35,165,1,0,0,0,37,167,1,0,0,0,39,169,1,0,0,0,
        41,171,1,0,0,0,43,175,1,0,0,0,45,179,1,0,0,0,47,183,1,0,0,0,49,196,
        1,0,0,0,51,198,1,0,0,0,53,203,1,0,0,0,55,207,1,0,0,0,57,214,1,0,
        0,0,59,220,1,0,0,0,61,222,1,0,0,0,63,225,1,0,0,0,65,228,1,0,0,0,
        67,240,1,0,0,0,69,251,1,0,0,0,71,262,1,0,0,0,73,310,1,0,0,0,75,313,
        1,0,0,0,77,332,1,0,0,0,79,361,1,0,0,0,81,365,1,0,0,0,83,382,1,0,
        0,0,85,384,1,0,0,0,87,391,1,0,0,0,89,90,5,40,0,0,90,2,1,0,0,0,91,
        92,5,41,0,0,92,4,1,0,0,0,93,94,5,123,0,0,94,6,1,0,0,0,95,96,5,125,
        0,0,96,8,1,0,0,0,97,98,5,91,0,0,98,10,1,0,0,0,99,100,5,93,0,0,100,
        12,1,0,0,0,101,102,5,46,0,0,102,14,1,0,0,0,103,104,5,44,0,0,104,
        16,1,0,0,0,105,106,5,124,0,0,106,107,5,60,0,0,107,108,5,51,0,0,108,
        109,5,124,0,0,109,18,1,0,0,0,110,111,5,107,0,0,111,112,5,114,0,0,
        112,113,5,111,0,0,113,114,5,112,0,0,114,115,5,107,0,0,115,116,5,
        97,0,0,116,117,5,119,0,0,117,118,5,107,0,0,118,119,5,114,0,0,119,
        120,5,111,0,0,120,121,5,112,0,0,121,122,5,107,0,0,122,123,5,101,
        0,0,123,20,1,0,0,0,124,125,5,105,0,0,125,126,5,110,0,0,126,127,5,
        110,0,0,127,128,5,121,0,0,128,129,5,111,0,0,129,130,5,100,0,0,130,
        22,1,0,0,0,131,134,3,19,9,0,132,134,3,21,10,0,133,131,1,0,0,0,133,
        132,1,0,0,0,134,24,1,0,0,0,135,136,5,109,0,0,136,137,5,110,0,0,137,
        138,5,105,0,0,138,139,5,101,0,0,139,140,5,106,0,0,140,141,5,115,
        0,0,141,142,5,122,0,0,142,143,5,121,0,0,143,144,5,111,0,0,144,145,
        5,100,0,0,145,26,1,0,0,0,146,147,5,119,0,0,147,148,5,105,0,0,148,
        149,5,101,0,0,149,150,5,107,0,0,150,151,5,115,0,0,151,152,5,122,
        0,0,152,153,5,121,0,0,153,154,5,111,0,0,154,155,5,100,0,0,155,28,
        1,0,0,0,156,160,3,25,12,0,157,160,3,27,13,0,158,160,3,23,11,0,159,
        156,1,0,0,0,159,157,1,0,0,0,159,158,1,0,0,0,160,30,1,0,0,0,161,162,
        5,43,0,0,162,32,1,0,0,0,163,164,5,45,0,0,164,34,1,0,0,0,165,166,
        5,42,0,0,166,36,1,0,0,0,167,168,5,47,0,0,168,38,1,0,0,0,169,170,
        5,37,0,0,170,40,1,0,0,0,171,172,5,124,0,0,172,173,5,47,0,0,173,174,
        5,124,0,0,174,42,1,0,0,0,175,176,5,124,0,0,176,177,5,94,0,0,177,
        178,5,124,0,0,178,44,1,0,0,0,179,180,5,124,0,0,180,181,5,118,0,0,
        181,182,5,124,0,0,182,46,1,0,0,0,183,184,5,124,0,0,184,185,5,42,
        0,0,185,186,5,124,0,0,186,48,1,0,0,0,187,197,3,31,15,0,188,197,3,
        33,16,0,189,197,3,35,17,0,190,197,3,37,18,0,191,197,3,39,19,0,192,
        197,3,41,20,0,193,197,3,43,21,0,194,197,3,45,22,0,195,197,3,47,23,
        0,196,187,1,0,0,0,196,188,1,0,0,0,196,189,1,0,0,0,196,190,1,0,0,
        0,196,191,1,0,0,0,196,192,1,0,0,0,196,193,1,0,0,0,196,194,1,0,0,
        0,196,195,1,0,0,0,197,50,1,0,0,0,198,199,5,111,0,0,199,200,5,114,
        0,0,200,201,5,97,0,0,201,202,5,122,0,0,202,52,1,0,0,0,203,204,5,
        108,0,0,204,205,5,117,0,0,205,206,5,98,0,0,206,54,1,0,0,0,207,208,
        5,110,0,0,208,209,5,105,0,0,209,210,5,101,0,0,210,56,1,0,0,0,211,
        215,3,51,25,0,212,215,3,53,26,0,213,215,3,55,27,0,214,211,1,0,0,
        0,214,212,1,0,0,0,214,213,1,0,0,0,215,58,1,0,0,0,216,221,3,57,28,
        0,217,221,3,29,14,0,218,221,3,23,11,0,219,221,3,49,24,0,220,216,
        1,0,0,0,220,217,1,0,0,0,220,218,1,0,0,0,220,219,1,0,0,0,221,60,1,
        0,0,0,222,223,5,45,0,0,223,224,5,62,0,0,224,62,1,0,0,0,225,226,5,
        60,0,0,226,227,5,45,0,0,227,64,1,0,0,0,228,229,5,100,0,0,229,230,
        5,114,0,0,230,231,5,117,0,0,231,232,5,107,0,0,232,233,5,97,0,0,233,
        234,5,114,0,0,234,235,5,101,0,0,235,236,5,99,0,0,236,237,5,122,0,
        0,237,238,5,107,0,0,238,239,5,97,0,0,239,66,1,0,0,0,240,241,5,119,
        0,0,241,242,5,97,0,0,242,243,5,114,0,0,243,244,5,117,0,0,244,245,
        5,110,0,0,245,246,5,101,0,0,246,247,5,99,0,0,247,248,5,122,0,0,248,
        249,5,101,0,0,249,250,5,107,0,0,250,68,1,0,0,0,251,252,5,112,0,0,
        252,253,5,111,0,0,253,254,5,119,0,0,254,255,5,105,0,0,255,256,5,
        101,0,0,256,257,5,108,0,0,257,258,5,97,0,0,258,259,5,110,0,0,259,
        260,5,107,0,0,260,261,5,111,0,0,261,70,1,0,0,0,262,263,5,122,0,0,
        263,264,5,119,0,0,264,265,5,114,0,0,265,266,5,111,0,0,266,267,5,
        99,0,0,267,268,5,105,0,0,268,269,5,107,0,0,269,72,1,0,0,0,270,271,
        5,98,0,0,271,272,5,101,0,0,272,273,5,122,0,0,273,274,5,112,0,0,274,
        275,5,114,0,0,275,276,5,122,0,0,276,277,5,101,0,0,277,278,5,99,0,
        0,278,279,5,105,0,0,279,280,5,110,0,0,280,281,5,101,0,0,281,311,
        5,107,0,0,282,283,5,122,0,0,283,284,5,101,0,0,284,285,5,114,0,0,
        285,286,5,111,0,0,286,287,5,106,0,0,287,288,5,101,0,0,288,289,5,
        100,0,0,289,290,5,121,0,0,290,291,5,110,0,0,291,292,5,101,0,0,292,
        311,5,107,0,0,293,294,5,110,0,0,294,295,5,97,0,0,295,296,5,112,0,
        0,296,297,5,105,0,0,297,298,5,115,0,0,298,299,5,105,0,0,299,311,
        5,107,0,0,300,301,5,122,0,0,301,302,5,112,0,0,302,303,5,114,0,0,
        303,304,5,122,0,0,304,305,5,101,0,0,305,306,5,99,0,0,306,307,5,105,
        0,0,307,308,5,110,0,0,308,309,5,101,0,0,309,311,5,107,0,0,310,270,
        1,0,0,0,310,282,1,0,0,0,310,293,1,0,0,0,310,300,1,0,0,0,311,74,1,
        0,0,0,312,314,7,0,0,0,313,312,1,0,0,0,314,315,1,0,0,0,315,313,1,
        0,0,0,315,316,1,0,0,0,316,317,1,0,0,0,317,318,6,37,0,0,318,76,1,
        0,0,0,319,321,3,33,16,0,320,319,1,0,0,0,320,321,1,0,0,0,321,322,
        1,0,0,0,322,324,7,1,0,0,323,325,7,2,0,0,324,323,1,0,0,0,325,326,
        1,0,0,0,326,324,1,0,0,0,326,327,1,0,0,0,327,333,1,0,0,0,328,330,
        3,33,16,0,329,328,1,0,0,0,329,330,1,0,0,0,330,331,1,0,0,0,331,333,
        7,2,0,0,332,320,1,0,0,0,332,329,1,0,0,0,333,78,1,0,0,0,334,336,3,
        33,16,0,335,334,1,0,0,0,335,336,1,0,0,0,336,337,1,0,0,0,337,339,
        7,1,0,0,338,340,7,2,0,0,339,338,1,0,0,0,340,341,1,0,0,0,341,339,
        1,0,0,0,341,342,1,0,0,0,342,343,1,0,0,0,343,347,3,13,6,0,344,346,
        7,2,0,0,345,344,1,0,0,0,346,349,1,0,0,0,347,345,1,0,0,0,347,348,
        1,0,0,0,348,362,1,0,0,0,349,347,1,0,0,0,350,352,3,33,16,0,351,350,
        1,0,0,0,351,352,1,0,0,0,352,353,1,0,0,0,353,354,7,2,0,0,354,358,
        3,13,6,0,355,357,7,2,0,0,356,355,1,0,0,0,357,360,1,0,0,0,358,356,
        1,0,0,0,358,359,1,0,0,0,359,362,1,0,0,0,360,358,1,0,0,0,361,335,
        1,0,0,0,361,351,1,0,0,0,362,80,1,0,0,0,363,366,3,77,38,0,364,366,
        3,79,39,0,365,363,1,0,0,0,365,364,1,0,0,0,366,82,1,0,0,0,367,368,
        5,110,0,0,368,369,5,105,0,0,369,370,5,101,0,0,370,371,5,112,0,0,
        371,372,5,114,0,0,372,373,5,97,0,0,373,374,5,119,0,0,374,375,5,100,
        0,0,375,383,5,97,0,0,376,377,5,112,0,0,377,378,5,114,0,0,378,379,
        5,97,0,0,379,380,5,119,0,0,380,381,5,100,0,0,381,383,5,97,0,0,382,
        367,1,0,0,0,382,376,1,0,0,0,383,84,1,0,0,0,384,388,7,3,0,0,385,387,
        7,4,0,0,386,385,1,0,0,0,387,390,1,0,0,0,388,386,1,0,0,0,388,389,
        1,0,0,0,389,86,1,0,0,0,390,388,1,0,0,0,391,392,5,124,0,0,392,393,
        5,60,0,0,393,394,5,51,0,0,394,395,5,124,0,0,395,399,1,0,0,0,396,
        398,8,5,0,0,397,396,1,0,0,0,398,401,1,0,0,0,399,397,1,0,0,0,399,
        400,1,0,0,0,400,402,1,0,0,0,401,399,1,0,0,0,402,403,6,43,0,0,403,
        88,1,0,0,0,22,0,133,159,196,214,220,310,315,320,326,329,332,335,
        341,347,351,358,361,365,382,388,399,1,6,0,0
    ]

class cutiev2Lexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    Open_Parenthesis = 1
    Close_Parenthesis = 2
    Open_Bracket = 3
    Close_Bracket = 4
    Open_Square_Bracket = 5
    Close_Square_Bracket = 6
    Dot = 7
    Comma = 8
    Semicolon = 9
    Operator_sign = 10
    Var_define = 11
    Val_assign = 12
    Print = 13
    If = 14
    While = 15
    Return = 16
    TYPE = 17
    White_Sign = 18
    Int = 19
    Double = 20
    Number = 21
    Bool = 22
    NAME = 23
    COMMENT = 24

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "'{'", "'}'", "'['", "']'", "'.'", "','", "'|<3|'", 
            "'->'", "'<-'", "'drukareczka'", "'waruneczek'", "'powielanko'", 
            "'zwrocik'" ]

    symbolicNames = [ "<INVALID>",
            "Open_Parenthesis", "Close_Parenthesis", "Open_Bracket", "Close_Bracket", 
            "Open_Square_Bracket", "Close_Square_Bracket", "Dot", "Comma", 
            "Semicolon", "Operator_sign", "Var_define", "Val_assign", "Print", 
            "If", "While", "Return", "TYPE", "White_Sign", "Int", "Double", 
            "Number", "Bool", "NAME", "COMMENT" ]

    ruleNames = [ "Open_Parenthesis", "Close_Parenthesis", "Open_Bracket", 
                  "Close_Bracket", "Open_Square_Bracket", "Close_Square_Bracket", 
                  "Dot", "Comma", "Semicolon", "Equals", "UnEquals", "Operator_sign_equality", 
                  "Lesser", "Greater", "Operator_sign_comparison", "Plus", 
                  "Minus", "Multiplication", "Division", "Modulo", "FloorDivision", 
                  "Max", "Min", "Power", "Operator_sign_numerical", "And", 
                  "Or", "Not", "Operator_sign_boolean", "Operator_sign", 
                  "Var_define", "Val_assign", "Print", "If", "While", "Return", 
                  "TYPE", "White_Sign", "Int", "Double", "Number", "Bool", 
                  "NAME", "COMMENT" ]

    grammarFileName = "cutiev2.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


